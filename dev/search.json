[{"path":"https://kwb-r.github.io/kwb.prep/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H (2022). kwb.prep: Markdown-Documented Data Preparation. R package version 0.3.0.9000, https://github.com/KWB-R/kwb.prep.","code":"@Manual{,   title = {kwb.prep: Markdown-Documented Data Preparation},   author = {Hauke Sonnenberg},   year = {2022},   note = {R package version 0.3.0.9000},   url = {https://github.com/KWB-R/kwb.prep}, }"},{"path":"https://kwb-r.github.io/kwb.prep/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Markdown-Documented Data Preparation","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install kwb.prep in R install.packages('kwb.prep')  # Browse the kwb.prep manual pages help(package = 'kwb.prep')"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Filter Criteria from List — applyFilter","title":"Apply Filter Criteria from List — applyFilter","text":"Apply Filter Criteria List","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Filter Criteria from List — applyFilter","text":"","code":"applyFilter(data, criteria_list, element, length_column = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Filter Criteria from List — applyFilter","text":"data data frame criteria_list list (named) vectors character representing filter criteria element name list element selected fom criteria_list length_column passed applyFilterCriteria","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Filter Criteria from List — applyFilter","text":"","code":"criteria_list <- list(   apple = c(\"is red or green\" = \"colour %in% c('red', 'green')\"),   banana = c(\"is not straight\" = \"! straight\") )  fruit_properties <- data.frame(   colour = c(\"green\", \"red\", \"yellow\"),   straight = c(TRUE, TRUE, FALSE)   )    applyFilter(fruit_properties, criteria_list, \"apple\") #> Evaluating colour %in% c(\"red\", \"green\") ... #>   is TRUE for       2 rows ( 66.7 %), #>     FALSE for       1 rows ( 33.3 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 2 #>   colour straight #> 1  green     TRUE #> 2    red     TRUE applyFilter(fruit_properties, criteria_list, \"banana\") #> Evaluating !straight ... #>   is TRUE for       1 rows ( 33.3 %), #>     FALSE for       2 rows ( 66.7 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 1 #>   colour straight #> 3 yellow    FALSE"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilterCriteria.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Rows from Data Frame Matching Criteria — applyFilterCriteria","title":"Filter Rows from Data Frame Matching Criteria — applyFilterCriteria","text":"Details criteria applied number rows matching criterion returned attribute \"details.filter\". criterion evaluates NA, corresponding row data frame removed (just criterion evaluated FALSE).","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilterCriteria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Rows from Data Frame Matching Criteria — applyFilterCriteria","text":"","code":"applyFilterCriteria(x, criteria = NULL, lengthColumn = NULL, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilterCriteria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Rows from Data Frame Matching Criteria — applyFilterCriteria","text":"x data frame criteria vector character defining filter criteria evaluated x lengthColumn name column containing lengths, e.g. \"Length_raw\" ... passed matchesCriteria","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/applyFilterCriteria.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Rows from Data Frame Matching Criteria — applyFilterCriteria","text":"","code":"# Create a very simple data frame df <- data.frame(value = 1:10, group = rep(c(\"a\", \"b\"), 5))  # Show the data frame df #>    value group #> 1      1     a #> 2      2     b #> 3      3     a #> 4      4     b #> 5      5     a #> 6      6     b #> 7      7     a #> 8      8     b #> 9      9     a #> 10    10     b  # Filter for rows meeting two criteria result <- applyFilterCriteria(df, c(   \"value is below or equal to 5\" = \"value <= 5\",    \"group is 'a'\" = \"group == 'a'\" )) #> Evaluating value <= 5 ... #>   is TRUE for       5 rows ( 50.0 %), #>     FALSE for       5 rows ( 50.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 5 #> Evaluating group == \"a\" ... #>   is TRUE for       5 rows ( 50.0 %), #>     FALSE for       5 rows ( 50.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 3  # Show the result result #>   value group #> 1     1     a #> 3     3     a #> 5     5     a  # Get the evaluation of each criterion in columns kwb.utils::getAttribute(result, \"matches\") #>  [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE #> attr(,\"details\") #>          C1    C2 #>  [1,]  TRUE  TRUE #>  [2,]  TRUE FALSE #>  [3,]  TRUE  TRUE #>  [4,]  TRUE FALSE #>  [5,]  TRUE  TRUE #>  [6,] FALSE FALSE #>  [7,] FALSE  TRUE #>  [8,] FALSE FALSE #>  [9,] FALSE  TRUE #> [10,] FALSE FALSE #> attr(,\"details\")attr(,\"criteria\") #>                              id    condition #> value is below or equal to 5 C1   value <= 5 #> group is 'a'                 C2 group == 'a'"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/apply_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Groups of Filter Criteria from Configuration — apply_filters","title":"Apply Groups of Filter Criteria from Configuration — apply_filters","text":"Apply Groups Filter Criteria Configuration","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/apply_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Groups of Filter Criteria from Configuration — apply_filters","text":"","code":"apply_filters(data, groups, length_column = NULL, id_columns = names(data)[1L])"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/apply_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Groups of Filter Criteria from Configuration — apply_filters","text":"data data frame groups names filter criteria groups defined list returned kwb.prep:::read_filter_criteria length_column name column data containing lengths (summed overview returned) id_columns names column(s) data uniquely identify records. column / columns returned order report records removed","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/apply_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Groups of Filter Criteria from Configuration — apply_filters","text":"data, filtered according specified criteria. returned data frame attribute filter_info list many elements groups. elements named according values given groups. list element list one element overview (data frame one row per filter criterion) elements removed_<> data frames id_columns represent records removed according filter step .","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/apply_filters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Groups of Filter Criteria from Configuration — apply_filters","text":"","code":"# Define filter criteria criteria <- list(   sepal = c(     \"sepal short\" = \"Sepal.Length < 5\",     \"sepal narrow\" = \"Sepal.Width < 3\"   ),   petal = c(     \"petal short\" = \"Petal.Length < 5\",     \"petal narrow\" = \"Petal.Width < 3\"   ) )  # Write criteria to temporary yaml file tdir <- tempdir() yaml::write_yaml(criteria, file.path(tdir, \"filter_criteria.yml\"))  # Set path to temporary \"config\" folder so that kwb.prep knows about it set_user_config_dir(tdir)  # Apply filter groups \"sepal\" and \"petal\" to the iris dataset result <- apply_filters(iris, c(\"sepal\", \"petal\")) #> ## Filterschritte 'sepal' anwenden auf 'sepal' #>  #> ## Filterschritte 'sepal' anwenden auf 'sepal' #>  #> ```{r eval = FALSE} #> Evaluating Sepal.Length < 5 ... #>   is TRUE for      22 rows ( 14.7 %), #>     FALSE for     128 rows ( 85.3 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 22 #> Evaluating Sepal.Width < 3 ... #>   is TRUE for      57 rows ( 38.0 %), #>     FALSE for      93 rows ( 62.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 4 #> ``` #>  #> Eine Uebersicht ueber die entfernten Haltungen und deren Laengen kann nicht erzeugt werden, da #>  #> - keine Laengenangaben uebergeben wurden #>  #> ## Filterschritte 'petal' anwenden auf 'petal' #>  #> ## Filterschritte 'petal' anwenden auf 'petal' #>  #> ```{r eval = FALSE} #> Evaluating Petal.Length < 5 ... #>   is TRUE for       4 rows (100.0 %), #>     FALSE for       0 rows (  0.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 4 #> Evaluating Petal.Width < 3 ... #>   is TRUE for       4 rows (100.0 %), #>     FALSE for       0 rows (  0.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 4 #> ``` #>  #> Eine Uebersicht ueber die entfernten Haltungen und deren Laengen kann nicht erzeugt werden, da #>  #> - keine Laengenangaben uebergeben wurden #>   # Have a look at the result str(result) #> 'data.frame':\t4 obs. of  5 variables: #>  $ Sepal.Length: num  4.4 4.5 4.9 4.9 #>  $ Sepal.Width : num  2.9 2.3 2.4 2.5 #>  $ Petal.Length: num  1.4 1.3 3.3 4.5 #>  $ Petal.Width : num  0.2 0.3 1 1.7 #>  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 2 3 #>  - attr(*, \"filter_info\")=List of 2 #>   ..$ sepal:List of 3 #>   .. ..$ overview :'data.frame':\t2 obs. of  5 variables: #>   .. .. ..$ CleaningStep   : chr [1:2] \"Keep 'Sepal.Length < 5'\" \"Keep 'Sepal.Width < 3'\" #>   .. .. ..$ Count.go       : int [1:2] 128 93 #>   .. .. ..$ Percentage.go  : num [1:2] 85.3 62 #>   .. .. ..$ Count.keep     : int [1:2] 22 4 #>   .. .. ..$ Percentage.keep: num [1:2] 14.67 2.67 #>   .. ..$ removed_1:'data.frame':\t128 obs. of  1 variable: #>   .. .. ..$ Sepal.Length: num [1:128] 5.1 5 5.4 5 5.4 5.8 5.7 5.4 5.1 5.7 ... #>   .. ..$ removed_2:'data.frame':\t93 obs. of  1 variable: #>   .. .. ..$ Sepal.Length: num [1:93] 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.9 5.4 ... #>   ..$ petal:List of 3 #>   .. ..$ overview :'data.frame':\t2 obs. of  5 variables: #>   .. .. ..$ CleaningStep   : chr [1:2] \"Keep 'Petal.Length < 5'\" \"Keep 'Petal.Width < 3'\" #>   .. .. ..$ Count.go       : int [1:2] 0 0 #>   .. .. ..$ Percentage.go  : int [1:2] 0 0 #>   .. .. ..$ Count.keep     : int [1:2] 4 4 #>   .. .. ..$ Percentage.keep: num [1:2] 100 100 #>   .. ..$ removed_1:'data.frame':\t0 obs. of  1 variable: #>   .. .. ..$ Sepal.Length: num(0)  #>   .. ..$ removed_2:'data.frame':\t0 obs. of  1 variable: #>   .. .. ..$ Sepal.Length: num(0)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/assign_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide all Objects of kwb.prep in the Global Environment — assign_objects","title":"Provide all Objects of kwb.prep in the Global Environment — assign_objects","text":"function provides (also non-exported) function definitions package Global environment. useful debugging code function calls non-exported functions.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/assign_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide all Objects of kwb.prep in the Global Environment — assign_objects","text":"","code":"assign_objects()  assign_objects()"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/breaksToIntervalLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Interval Labels from Breaks Vector — breaksToIntervalLabels","title":"Create Interval Labels from Breaks Vector — breaksToIntervalLabels","text":"Create labels intervals defined breaks different possible styles","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/breaksToIntervalLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Interval Labels from Breaks Vector — breaksToIntervalLabels","text":"","code":"breaksToIntervalLabels(breaks, style = 5, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/breaksToIntervalLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Interval Labels from Breaks Vector — breaksToIntervalLabels","text":"breaks numeric vector breaks style passed intervalLabel ... arguments passed intervalLabel","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/checkGrouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Two Columns of a Data Frame (Raw Vs Regrouped) — checkGrouping","title":"Compare Two Columns of a Data Frame (Raw Vs Regrouped) — checkGrouping","text":"Compare Two Columns Data Frame (Raw Vs Regrouped)","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/checkGrouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Two Columns of a Data Frame (Raw Vs Regrouped) — checkGrouping","text":"","code":"checkGrouping(data, column_raw, column_cat)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/checkGrouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Two Columns of a Data Frame (Raw Vs Regrouped) — checkGrouping","text":"data data frame column_raw name column data containing original (raw) values column_cat name column data containing result regrouping raw value categories","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/checkNumberOfUnique.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Number of Unique Values in Selected Columns — checkNumberOfUnique","title":"Show Number of Unique Values in Selected Columns — checkNumberOfUnique","text":"Show Number Unique Values Selected Columns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/checkNumberOfUnique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Number of Unique Values in Selected Columns — checkNumberOfUnique","text":"","code":"checkNumberOfUnique(data, columns = names(data))"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/checkNumberOfUnique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Number of Unique Values in Selected Columns — checkNumberOfUnique","text":"data data frame columns names columns data count unique values","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_table_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Valid Table Name — check_table_name","title":"Check for Valid Table Name — check_table_name","text":"Check argument can used table name","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_table_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Valid Table Name — check_table_name","text":"","code":"check_table_name(table_name)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_table_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Valid Table Name — check_table_name","text":"table_name R object checked usage table name","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_table_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for Valid Table Name — check_table_name","text":"","code":"try(check_table_name(c(\"more\", \"than\", \"one\", \"string\"))) #> Error : table_name must be a vector of character of length one try(check_table_name(\"one_is_ok\"))"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_zip_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop if File Name Does not End with Zip Extension — check_zip_extension","title":"Stop if File Name Does not End with Zip Extension — check_zip_extension","text":"Stop File Name End Zip Extension","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_zip_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop if File Name Does not End with Zip Extension — check_zip_extension","text":"","code":"check_zip_extension(file)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_zip_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop if File Name Does not End with Zip Extension — check_zip_extension","text":"file path file check .zip .7z file name extension","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/check_zip_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop if File Name Does not End with Zip Extension — check_zip_extension","text":"function return anything stops clear error message case file end something looks like file extension compressed file.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Elements of Sublists — collect","title":"Collect Elements of Sublists — collect","text":"Collect Elements Sublists","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Elements of Sublists — collect","text":"","code":"collect(x, element, default = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Elements of Sublists — collect","text":"x list lists element name list element collected sublist x default value returned lists element called element.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect Elements of Sublists — collect","text":"","code":"x <- list(   list(a = 1, b = 2),   list(c = 3, a = 4),   list(d = 5, e = 6) )  collect(x, \"a\") #> [1] 1 4 collect(x, \"a\", default = 99) #> [1]  1  4 99"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/contained_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of ","title":"Names of ","text":"Names \"Tables\" Provided Zip Archive","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/contained_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of ","text":"","code":"contained_tables(zip_file, config)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/contained_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of ","text":"zip_file path zip archive file (.zip .7z) config csv configuration mapping table names file names","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/contained_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of ","text":"vector character containing names tables corresponding files found given zip archive","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/contained_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Names of ","text":"","code":"kwb.prep::contained_tables(   zip_file = kwb.prep:::invalid_zip(\"five-rows.zip\"),    config = list(     pipes = list(file = \"Haltungen_SAN_utf8.csv\"),     trees = list(file = \"Haltungen_Baeume_utf8.csv\"),     animals = list(file = \"no-animals-there.csv\")   ) ) #> [1] \"pipes\" \"trees\""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/create_text_getter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a get_text() Function — create_text_getter","title":"Create a get_text() Function — create_text_getter","text":"Create get_text() Function","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/create_text_getter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a get_text() Function — create_text_getter","text":"","code":"create_text_getter(raw_strings = NULL, FUN = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/create_text_getter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a get_text() Function — create_text_getter","text":"raw_strings list string definitions (key = value) pairs FUN function called get string definitions","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/create_text_getter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a get_text() Function — create_text_getter","text":"function can used lookup string constant(s)","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/create_text_getter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a get_text() Function — create_text_getter","text":"","code":"get_text <- create_text_getter(   list(hello_en = \"good morning\", hello_de = \"sch<oe>ne Gr<ue><ss>e\") )  get_text(\"hello_en\") #> [1] \"good morning\" get_text(\"hello_de\") #> [1] \"schöne Grüße\" #get_text(\"no_such_key\") # error with clear error message"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/dataFramesToTextMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert List of Data Frames to Character Matrix — dataFramesToTextMatrix","title":"Convert List of Data Frames to Character Matrix — dataFramesToTextMatrix","text":"character matrix data frames appear one . data frame header data frame separated following data frame empty row.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/dataFramesToTextMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert List of Data Frames to Character Matrix — dataFramesToTextMatrix","text":"","code":"dataFramesToTextMatrix(data_frames)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/dataFramesToTextMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert List of Data Frames to Character Matrix — dataFramesToTextMatrix","text":"data_frames list data frames","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/dataFramesToTextMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert List of Data Frames to Character Matrix — dataFramesToTextMatrix","text":"","code":"data_frames <- list(   data.frame(a = 1:3, b = 2:4),   data.frame(a = 1:5, b = 2:6, c = 3:7) )  dataFramesToTextMatrix(data_frames) #>       [,1] [,2] [,3] #>  [1,] \"a\"  \"b\"  \"\"   #>  [2,] \"1\"  \"2\"  \"\"   #>  [3,] \"2\"  \"3\"  \"\"   #>  [4,] \"3\"  \"4\"  \"\"   #>  [5,] \"\"   \"\"   \"\"   #>  [6,] \"a\"  \"b\"  \"c\"  #>  [7,] \"1\"  \"2\"  \"3\"  #>  [8,] \"2\"  \"3\"  \"4\"  #>  [9,] \"3\"  \"4\"  \"5\"  #> [10,] \"4\"  \"5\"  \"6\"  #> [11,] \"5\"  \"6\"  \"7\""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/doRegroupings.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Regrouping of Values in a Data Frame — doRegroupings","title":"Apply Regrouping of Values in a Data Frame — doRegroupings","text":"Apply Regrouping Values Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/doRegroupings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Regrouping of Values in a Data Frame — doRegroupings","text":"","code":"doRegroupings(   Data,   regroup.actual = kwb.utils::selectElements(settings, \"regroup.actual\"),   regroup.config = kwb.utils::selectElements(settings, \"regroup.config\"),   settings = NULL,   checkRemaining = TRUE,   to.factor = FALSE,   to.numeric = TRUE,   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/doRegroupings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Regrouping of Values in a Data Frame — doRegroupings","text":"Data data frame regroup.actual default: settings$regroup.actual regroup.config default: settings$regroup.config settings list settings may contain elements regroup.actual regroup.config checkRemaining TRUE (default) checked values occurred column regrouped considered regrouping .factor TRUE new values converted factor. default FALSE. .numeric (default: TRUE, overrides .factor!), passed regroup dbg TRUE (default) debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/extdata_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Path to File in This Package — extdata_file","title":"Get Path to File in This Package — extdata_file","text":"Get Path File Package","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/extdata_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Path to File in This Package — extdata_file","text":"","code":"extdata_file(..., must_exist = TRUE, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/extdata_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Path to File in This Package — extdata_file","text":"... parts file path passed system.file must_exist TRUE (default) specified file  exist, program stops error message dbg TRUE (default FALSE) debug messages  shown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fieldSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency of Value Combinations in Data Frame Columns — fieldSummary","title":"Frequency of Value Combinations in Data Frame Columns — fieldSummary","text":"Frequency Value Combinations Data Frame Columns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fieldSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency of Value Combinations in Data Frame Columns — fieldSummary","text":"","code":"fieldSummary(x, groupBy = names(x)[-1L], lengthColumn = \"\", na = \"Unknown\")"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fieldSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency of Value Combinations in Data Frame Columns — fieldSummary","text":"x data frame groupBy vector character naming columns (fields) x included evaluation. Default: names columns x except first one (assuming ID column). lengthColumn optional. Name column x summed na optional. Value treated NA. Default: \"Unknown\"","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fieldSummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency of Value Combinations in Data Frame Columns — fieldSummary","text":"","code":"n <- 1000L sample_replace <- function(x, ...) sample(x, size = n, replace = TRUE, ...) x <- data.frame(   pipe_id = 1:n,   material = sample_replace(c(\"clay\", \"concrete\", \"other\")),   age_cat = sample_replace(c(\"young\", \"old\")),   length = as.integer(rnorm(n, 50)),   stringsAsFactors = FALSE )  fieldSummary(x) #>    material age_cat length Count Percentage #> 1      clay     old     47     2        0.2 #> 2  concrete     old     47     1        0.1 #> 3     other     old     47     8        0.8 #> 4      clay   young     47     2        0.2 #> 5  concrete   young     47     1        0.1 #> 6     other   young     47     1        0.1 #> 7      clay     old     48    19        1.9 #> 8  concrete     old     48    29        2.9 #> 9     other     old     48    12        1.2 #> 10     clay   young     48    23        2.3 #> 11 concrete   young     48    15        1.5 #> 12    other   young     48    25        2.5 #> 13     clay     old     49    70        7.0 #> 14 concrete     old     49    61        6.1 #> 15    other     old     49    57        5.7 #> 16     clay   young     49    70        7.0 #> 17 concrete   young     49    54        5.4 #> 18    other   young     49    58        5.8 #> 19     clay     old     50    52        5.2 #> 20 concrete     old     50    55        5.5 #> 21    other     old     50    58        5.8 #> 22     clay   young     50    54        5.4 #> 23 concrete   young     50    59        5.9 #> 24    other   young     50    52        5.2 #> 25     clay     old     51    24        2.4 #> 26 concrete     old     51    25        2.5 #> 27    other     old     51    19        1.9 #> 28     clay   young     51    29        2.9 #> 29 concrete   young     51    24        2.4 #> 30    other   young     51    18        1.8 #> 31     clay     old     52     2        0.2 #> 32 concrete     old     52     4        0.4 #> 33    other     old     52     1        0.1 #> 34     clay   young     52     5        0.5 #> 35 concrete   young     52     3        0.3 #> 36    other   young     52     5        0.5 #> 37     clay     old     53     2        0.2 #> 38 concrete     old     53     1        0.1 fieldSummary(x, \"age_cat\") #>   age_cat Count Percentage #> 1     old   502       50.2 #> 2   young   498       49.8 fieldSummary(x, \"material\") #>   material Count Percentage #> 1     clay   354       35.4 #> 2 concrete   332       33.2 #> 3    other   314       31.4 fieldSummary(x, \"material\", lengthColumn = \"length\") #>   material Count length Percentage #> 1     clay   354  17537       35.4 #> 2 concrete   332  16457       33.2 #> 3    other   314  15533       31.4"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fillUpNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill NA in First Vector With Values From Second Vector — fillUpNA","title":"Fill NA in First Vector With Values From Second Vector — fillUpNA","text":"Fill NA First Vector Values Second Vector","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fillUpNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill NA in First Vector With Values From Second Vector — fillUpNA","text":"","code":"fillUpNA(x, y, dbg = TRUE, name_x = NULL, name_y = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fillUpNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill NA in First Vector With Values From Second Vector — fillUpNA","text":"x first vector y second vector dbg TRUE debug message shown name_x name x name_y name y","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/fillUpNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill NA in First Vector With Values From Second Vector — fillUpNA","text":"x NA replaced values y positions","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getChangesOfDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Changes of Rows That Are Duplicated in Selected Columns — getChangesOfDuplicates","title":"Get Changes of Rows That Are Duplicated in Selected Columns — getChangesOfDuplicates","text":"Get Changes Rows Duplicated Selected Columns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getChangesOfDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Changes of Rows That Are Duplicated in Selected Columns — getChangesOfDuplicates","text":"","code":"getChangesOfDuplicates(df, columns, add_columns = columns)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getChangesOfDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Changes of Rows That Are Duplicated in Selected Columns — getChangesOfDuplicates","text":"df data frame columns names columns df look duplicate value combinations add_columns names additional columns shall appear output even changes columns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getChangesOfDuplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Changes of Rows That Are Duplicated in Selected Columns — getChangesOfDuplicates","text":"list data frames. list many elements different value combinations columns appear df. element data frame rows df value combination columns. default data frame contains columns given columns columns df least one change values different rows.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getChangesOfDuplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Changes of Rows That Are Duplicated in Selected Columns — getChangesOfDuplicates","text":"","code":"df <- data.frame(   id = 1:7,    name = c(\"one\", \"one\", \"two\", \"two\", \"three\", \"three\", \"three\"),    type = c(\"A\", \"A\", \"B\", \"C\", \"D\", \"D\", \"D\"),   size = c(10, 11, 12, 12, 13, 13, 14),   height = c(1, 1, 2, 3, 4, 4, 5) )  df #>   id  name type size height #> 1  1   one    A   10      1 #> 2  2   one    A   11      1 #> 3  3   two    B   12      2 #> 4  4   two    C   12      3 #> 5  5 three    D   13      4 #> 6  6 three    D   13      4 #> 7  7 three    D   14      5  getChangesOfDuplicates(df, \"name\") #> [[1]] #>   name id size .n #> 1  one  1   10  1 #> 2  one  2   11  1 #>  #> [[2]] #>    name id size height .n #> 1 three  5   13      4  1 #> 2 three  6   13      4  1 #> 3 three  7   14      5  1 #>  #> [[3]] #>   name id type height .n #> 1  two  3    B      2  1 #> 2  two  4    C      3  1 #>  getChangesOfDuplicates(df, c(\"name\", \"type\")) #> [[1]] #>   name type id size .n #> 1  one    A  1   10  1 #> 2  one    A  2   11  1 #>  #> [[2]] #>    name type id size height .n #> 1 three    D  5   13      4  1 #> 2 three    D  6   13      4  1 #> 3 three    D  7   14      5  1 #>"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getYearFromColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Integer Year Number from Column — getYearFromColumn","title":"Get Integer Year Number from Column — getYearFromColumn","text":"Get Integer Year Number Column","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getYearFromColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Integer Year Number from Column — getYearFromColumn","text":"","code":"getYearFromColumn(data, column)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getYearFromColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Integer Year Number from Column — getYearFromColumn","text":"data data frame column representing date date time","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/getYearFromColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Integer Year Number from Column — getYearFromColumn","text":"vector integer long number rows data","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_column_classes2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Expected Table Column Types from Config — get_column_classes2","title":"Get Expected Table Column Types from Config — get_column_classes2","text":"expected column types defined configuration?","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_column_classes2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Expected Table Column Types from Config — get_column_classes2","text":"","code":"get_column_classes2(table_name, config, available = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_column_classes2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Expected Table Column Types from Config — get_column_classes2","text":"table_name name table lookup column types config config configuration object (list) available optional. Names available table columns. given, types columns returned.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_column_classes2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Expected Table Column Types from Config — get_column_classes2","text":"list one entry per type. element contains names colums corresponding type.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_column_classes2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Expected Table Column Types from Config — get_column_classes2","text":"","code":"config <- list(animals = list(fields = list(   cats = list(field = \"Katzen\", type = \"integer\"),   dogs = list(field = \"Hunde\", type = \"double\"),   mice = list(field = \"Maeuse\", type = \"integer\") )))  kwb.prep:::get_column_classes2(\"animals\", config) #> $double #> [1] \"Hunde\" #>  #> $integer #> [1] \"Katzen\" \"Maeuse\" #>"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_csv_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Names of CSV Files Referenced in Config — get_csv_filenames","title":"Get Names of CSV Files Referenced in Config — get_csv_filenames","text":"Get Names CSV Files Referenced Config","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_csv_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Names of CSV Files Referenced in Config — get_csv_filenames","text":"","code":"get_csv_filenames(config, keep_empty = FALSE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_csv_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Names of CSV Files Referenced in Config — get_csv_filenames","text":"config configuration object (list) one entry per \"table\", expected entry \"file\" keep_empty logical. Whether keep \"file\" entries empty (\"\")","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_csv_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Names of CSV Files Referenced in Config — get_csv_filenames","text":"vector character file names referenced config","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_csv_filenames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Names of CSV Files Referenced in Config — get_csv_filenames","text":"","code":"config <- list(   table_a = list(file = \"table-a.csv\"),   table_b = list(file = \"table-b.csv\") ) get_csv_filenames(config) #>       table_a       table_b  #> \"table-a.csv\" \"table-b.csv\""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_lower_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Lower Case Extension of a File — get_lower_extension","title":"Lower Case Extension of a File — get_lower_extension","text":"Lower Case Extension File","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_lower_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lower Case Extension of a File — get_lower_extension","text":"","code":"get_lower_extension(file)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_lower_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lower Case Extension of a File — get_lower_extension","text":"file file path file name","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_lower_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lower Case Extension of a File — get_lower_extension","text":"","code":"get_lower_extension(\"abc.XYZ\") #> [1] \"xyz\""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve Path from Path Dictionary in Config Folder — get_path","title":"Resolve Path from Path Dictionary in Config Folder — get_path","text":"Resolve Path Path Dictionary Config Folder","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve Path from Path Dictionary in Config Folder — get_path","text":"","code":"get_path(x = NULL, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve Path from Path Dictionary in Config Folder — get_path","text":"x key looked path dictionary ... possible key = value assignments used replace \\<placeholders\\> path looked ","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get List Defining Renamings from Data Frame — get_renamings","title":"Get List Defining Renamings from Data Frame — get_renamings","text":"Get list defining renamings form = assignments data frame read function may specified.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get List Defining Renamings from Data Frame — get_renamings","text":"","code":"get_renamings(from, to = \"column\", data = NULL, reader = read_csv_file, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get List Defining Renamings from Data Frame — get_renamings","text":"name column data take \"\" values name column data take \"\" values data data frame defining renamings reader reader function providing data. Default: kwb.prep:::read_csv_file ... arguments passed reader function","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get List Defining Renamings from Data Frame — get_renamings","text":"list defining renamings e.g. expected renameColumns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings_from_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get List of Renamings from Configuration — get_renamings_from_config","title":"Get List of Renamings from Configuration — get_renamings_from_config","text":"Get List Renamings Configuration","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings_from_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get List of Renamings from Configuration — get_renamings_from_config","text":"","code":"get_renamings_from_config(config, table_name, all = TRUE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings_from_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get List of Renamings from Configuration — get_renamings_from_config","text":"config list one element per table/csv file table_name name list element within config FALSE fields property \"required = TRUE\" considered","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_renamings_from_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get List of Renamings from Configuration — get_renamings_from_config","text":"list original names names internal names values. list can used call renameColumns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Set of Column Names from a Data Frame Defining Selections — get_selection","title":"Get a Set of Column Names from a Data Frame Defining Selections — get_selection","text":"Get Set Column Names Data Frame Defining Selections","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Set of Column Names from a Data Frame Defining Selections — get_selection","text":"","code":"get_selection(   number = 1,   data = NULL,   reader = read_csv_file,   ...,   column = paste0(\"select.\", number),   target = \"column\" )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Set of Column Names from a Data Frame Defining Selections — get_selection","text":"number number selection group, default: 1 data data frame defining groups columns reader reader function providing data. Default: kwb.prep:::read_csv_file ... arguments passed reader function column name column data containing numbers indicate columns select order target name column data containing column names","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Set of Column Names from a Data Frame Defining Selections — get_selection","text":"vector column names","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Text Constant — get_text","title":"Get Text Constant — get_text","text":"Get Text Constant","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Text Constant — get_text","text":"","code":"get_text(key = NULL, ..., raw_strings = get_raw_strings())"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Text Constant — get_text","text":"key identifier ... additional arguments passed sprintf raw_strings list raw string definitions key = value pairs","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Text Constant — get_text","text":"key NULL) list text constants text constant looked given key","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_user_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get List of User-Defined Text Constants — get_user_strings","title":"Get List of User-Defined Text Constants — get_user_strings","text":"Get List User-Defined Text Constants","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_user_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get List of User-Defined Text Constants — get_user_strings","text":"","code":"get_user_strings()"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_zipped_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files in Zip Archive — get_zipped_paths","title":"List Files in Zip Archive — get_zipped_paths","text":"List Files Zip Archive","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_zipped_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files in Zip Archive — get_zipped_paths","text":"","code":"get_zipped_paths(zip_file, include_dirs = FALSE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_zipped_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files in Zip Archive — get_zipped_paths","text":"zip_file path zip archive include_dirs TRUE directory paths also returned. default FALSE, .e. paths files returned.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/get_zipped_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files in Zip Archive — get_zipped_paths","text":"paths files contained zip archive","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/groupByBreaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Values Belonging to Intervals — groupByBreaks","title":"Group Values Belonging to Intervals — groupByBreaks","text":"Group values together belong intervals defined breaks","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/groupByBreaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Values Belonging to Intervals — groupByBreaks","text":"","code":"groupByBreaks(   x,   breaks,   values = breaksToIntervalLabels(breaks),   right = TRUE,   add.Inf.limits = TRUE,   to.factor = FALSE,   columns = NULL,   keyFields = NULL )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/groupByBreaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Values Belonging to Intervals — groupByBreaks","text":"x vector values data frame. x data frame, function applied column given columns (numeric columns default) breaks vector breaks values values assigned right TRUE intervals right-closed, else left-closed. add.Inf.limits TRUE (default), -Inf Inf added left right, respectively, breaks .factor TRUE new values converted factor. default FALSE. columns NULL vector column names (x data frame) keyFields NULL vector column names (x data frame). NULL, data frame columns coming first interval labels last column returned.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/groupByBreaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Values Belonging to Intervals — groupByBreaks","text":"","code":"groupByBreaks(1:10, breaks = 5, values = c(\"<= 5\", \"> 5\")) #>  [1] \"<= 5\" \"<= 5\" \"<= 5\" \"<= 5\" \"<= 5\" \"> 5\"  \"> 5\"  \"> 5\"  \"> 5\"  \"> 5\"  groupByBreaks(1:10, breaks = 5, right = FALSE, values = c(\"< 5\", \">= 5\")) #>  [1] \"< 5\"  \"< 5\"  \"< 5\"  \"< 5\"  \">= 5\" \">= 5\" \">= 5\" \">= 5\" \">= 5\" \">= 5\"  # Prepare a simple data frame x <- kwb.utils::noFactorDataFrame(   id = c(\"A\", \"B\", \"C\"),    value = c(10, 20, 30) )  # Keep the ID column of the data frame groupByBreaks(x, breaks = 20, keyFields = \"id\") #>   id value #> 1  A <= 20 #> 2  B <= 20 #> 3  C  > 20"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/has_zip_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a File have a Zip Extension (.zip, .7z)? — has_zip_extension","title":"Does a File have a Zip Extension (.zip, .7z)? — has_zip_extension","text":"File Zip Extension (.zip, .7z)?","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/has_zip_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a File have a Zip Extension (.zip, .7z)? — has_zip_extension","text":"","code":"has_zip_extension(file, expected = c(\"zip\", \"7z\"))"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/has_zip_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does a File have a Zip Extension (.zip, .7z)? — has_zip_extension","text":"file path(s) file(s) checked zip extension expected expected file name extensions. Default: c(\"zip\", \"7z\")","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/has_zip_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does a File have a Zip Extension (.zip, .7z)? — has_zip_extension","text":"vector logical","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/has_zip_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does a File have a Zip Extension (.zip, .7z)? — has_zip_extension","text":"","code":"all(has_zip_extension(c(\"a.zip\", \"b.ZIP\", \"c.Zip\", \"d.7z\", \"e.7Z\"))) # TRUE #> [1] TRUE has_zip_extension(\"a.txt\") # FALSE #> [1] FALSE"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/import_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Import CSV Files from ZIP File — import_db","title":"Import CSV Files from ZIP File — import_db","text":"function stops error message file file extension \".zip\" zip file contain expected csv files csv file contain expected fields (columns). Expected file names field names provided config). everything looks ok, csv files zip file extracted (new) folder.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/import_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import CSV Files from ZIP File — import_db","text":"","code":"import_db(zip_file, config, base_name = basename(zip_file), import_dir = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/import_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import CSV Files from ZIP File — import_db","text":"zip_file path zip file containing csv files config configuration object (list) describing csv files base_name base name folder created. current date also encoded folder name. default base name zip file (file name without file extension) used. import_dir optional. Path folder finally copy extracted files. default folder created.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/intervalLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Interval Label from Upper and Lower Boundary — intervalLabel","title":"Create Interval Label from Upper and Lower Boundary — intervalLabel","text":"Create label interval defined upper boundary lower boundary b","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/intervalLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Interval Label from Upper and Lower Boundary — intervalLabel","text":"","code":"intervalLabel(a, b, right = TRUE, style = 1, sep = \",\", space = \" \")"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/intervalLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Interval Label from Upper and Lower Boundary — intervalLabel","text":"upper boundary b lower boundary right TRUE (default) interval closed upper boundary style integer number 1 5 indicating one five possible styles name interval b. See examples . sep separator used lower upper boundary space space comparison operators boundary values.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/intervalLabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Interval Label from Upper and Lower Boundary — intervalLabel","text":"","code":"# Labels of different styles for right closed intervals (right = TRUE is the  # default) intervalLabel(1, 10, style = 1) # \"(1,10]\" #> [1] \"(1,10]\" intervalLabel(1, 10, style = 2) # \"<= 10\" #> [1] \"<= 10\" intervalLabel(1, 10, style = 3) # \"> 1\" #> [1] \"> 1\" intervalLabel(1, 10, style = 4) # \"<= \" \"> 1\" (vector of two elements!) #> [1] \"<= \" \"> 1\" intervalLabel(1, 10, style = 5) # \"<= 10\" \"> \" (vector of two elements!) #> [1] \"<= 10\" \"> \"     # The same with left closed intervals: right <- FALSE intervalLabel(1, 10, right, style = 1) # \"[1,10)\" #> [1] \"[1,10)\" intervalLabel(1, 10, right, style = 2) # \"< 10\" #> [1] \"< 10\" intervalLabel(1, 10, right, style = 3) # \">= 1\" #> [1] \">= 1\" intervalLabel(1, 10, right, style = 4) # \"< \" \">= 1\" (vector of two elements!) #> [1] \"< \"   \">= 1\" intervalLabel(1, 10, right, style = 5) # \"< 10\" \">= \" (vector of two elements!) #> [1] \"< 10\" \">= \""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/invalid_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to (Invalid) Example Zip File — invalid_zip","title":"Path to (Invalid) Example Zip File — invalid_zip","text":"Path (Invalid) Example Zip File","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/invalid_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to (Invalid) Example Zip File — invalid_zip","text":"","code":"invalid_zip(...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/invalid_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to (Invalid) Example Zip File — invalid_zip","text":"... (segments ) relative path wanted zip file, starting \"extdata/testdata/invalid-zips\" package installation folder","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/invalid_zip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to (Invalid) Example Zip File — invalid_zip","text":"","code":"# list available files (available <- invalid_zip()) #> [1] \"five-rows.zip\"          \"missing-fields.zip\"     \"two-tables-missing.zip\" # Get full path to the first file invalid_zip(available[1]) #> [1] \"/Users/runner/work/_temp/Library/kwb.prep/testdata/invalid-zips/five-rows.zip\""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/kable_no_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Data Frame as Markdown Table (Without Row Names by Default) — kable_no_rows","title":"Print Data Frame as Markdown Table (Without Row Names by Default) — kable_no_rows","text":"Print Data Frame Markdown Table (Without Row Names Default)","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/kable_no_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Data Frame as Markdown Table (Without Row Names by Default) — kable_no_rows","text":"","code":"kable_no_rows(..., row.names = FALSE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/kable_no_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Data Frame as Markdown Table (Without Row Names by Default) — kable_no_rows","text":"... passed kable row.names passed kable, default: FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/kable_translated.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Data Frame Columns and Print as Markdown — kable_translated","title":"Rename Data Frame Columns and Print as Markdown — kable_translated","text":"Rename Data Frame Columns Print Markdown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/kable_translated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Data Frame Columns and Print as Markdown — kable_translated","text":"","code":"kable_translated(x, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/kable_translated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Data Frame Columns and Print as Markdown — kable_translated","text":"x x ... passed translate_columns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/logicalToYesNo.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Vector of Logical to Vector of ","title":"Convert Vector of Logical to Vector of ","text":"Convert Vector Logical Vector \"Ja\"/\"Nein\"","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/logicalToYesNo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Vector of Logical to Vector of ","text":"","code":"logicalToYesNo(x, yesno = c(\"Ja\", \"Nein\"))"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/logicalToYesNo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Vector of Logical to Vector of ","text":"x vector logical yesno vector character length two giving strings used TRUE FALSE, respectively","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/logicalToYesNo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Vector of Logical to Vector of ","text":"vector character","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/logicalToYesNo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Vector of Logical to Vector of ","text":"","code":"logicalToYesNo(c(TRUE, FALSE, TRUE)) #> [1] \"Ja\"   \"Nein\" \"Ja\"   logicalToYesNo(c(TRUE, FALSE, TRUE), yesno = c(\"Yeah!\", \"Oh no!\")) #> [1] \"Yeah!\"  \"Oh no!\" \"Yeah!\""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/md_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Markdown Section Header — md_header","title":"Print Markdown Section Header — md_header","text":"Print Markdown Section Header","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/md_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Markdown Section Header — md_header","text":"","code":"md_header(   level,   caption_key = \"key?\",   caption = NULL,   print = TRUE,   msg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/md_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Markdown Section Header — md_header","text":"level level caption_key caption_key caption caption print print msg msg","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/overwriteIfNotNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Non-NA Values from Source Column in Target Column — overwriteIfNotNA","title":"Use Non-NA Values from Source Column in Target Column — overwriteIfNotNA","text":"Overwrite values target column values source column indices values source column NA","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/overwriteIfNotNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Non-NA Values from Source Column in Target Column — overwriteIfNotNA","text":"","code":"overwriteIfNotNA(data, target_column, source_column)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/overwriteIfNotNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Non-NA Values from Source Column in Target Column — overwriteIfNotNA","text":"data data frame target_column name target column source_column name source column","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/print.data_frame_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Result of Data Frame Comparison — print.data_frame_diff","title":"Print Result of Data Frame Comparison — print.data_frame_diff","text":"Print Result Data Frame Comparison","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/print.data_frame_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Result of Data Frame Comparison — print.data_frame_diff","text":"","code":"# S3 method for data_frame_diff print(x, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/print.data_frame_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Result of Data Frame Comparison — print.data_frame_diff","text":"x object class \"data_frame_diff\" ... currently used","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/printNumberOfNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Number of NA Values in Given Column — printNumberOfNA","title":"Print Number of NA Values in Given Column — printNumberOfNA","text":"Print Number NA Values Given Column","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/printNumberOfNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Number of NA Values in Given Column — printNumberOfNA","text":"","code":"printNumberOfNA(data, column, name = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/printNumberOfNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Number of NA Values in Given Column — printNumberOfNA","text":"data data frame column column name name name data","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/printTableForColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Result of table() for Given Column — printTableForColumn","title":"Print Result of table() for Given Column — printTableForColumn","text":"Print Result table() Given Column","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/printTableForColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Result of table() for Given Column — printTableForColumn","text":"","code":"printTableForColumn(data, column, name = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/printTableForColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Result of table() for Given Column — printTableForColumn","text":"data data frame column column name name name data","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/read_actual_regrouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Filter ","title":"Read and Filter ","text":"Read Filter \"regroup_actual.csv\"","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/read_actual_regrouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Filter ","text":"","code":"read_actual_regrouping(   name_actual,   group = NULL,   columns = NULL,   as_list = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/read_actual_regrouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Filter ","text":"name_actual Base name file config folder, default: \"regroup_actual\". file specifies: regroupings arcually applied? names input output columns? group Name column <name_actual>.csv containing non-empty fields rows considered. NULL (default) means rows file considered. columns names (input) columns regrouped. regroupings performed work columns columns created regrouping. default columns = NULL regroupings used (unless group given). as_list TRUE (default) actual regrouping configuration returned list (required doRegroupings), otherwise data frame.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/read_csv_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data Frame From CSV File — read_csv_file","title":"Read Data Frame From CSV File — read_csv_file","text":"Read Data Frame CSV File","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/read_csv_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data Frame From CSV File — read_csv_file","text":"","code":"read_csv_file(   file,   sep = get_column_separator(),   dec = \",\",   encoding = \"UTF-8\",   na.strings = \"\",   ...,   remove_comments = TRUE,   set_empty_string_to_na = FALSE,   dbg = 1L )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/read_csv_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data Frame From CSV File — read_csv_file","text":"file path csv file sep Column separator character. Default: semicolon \";\" dec Decimal separator character. Default: comma \",\" encoding file encoding string. Default: \"UTF-8\". Possible value: \"unknown\" na.strings strings occurring files representing NA (available). Default: \"\" ... arguments passed fread remove_comments rows starting \"#\" removed (default)? set_empty_string_to_na TRUE (default FALSE) empty strings character columns replaced NA dbg TRUE debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Values to Groups of Values — regroup","title":"Assign Values to Groups of Values — regroup","text":"Assign Values Groups Values","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Values to Groups of Values — regroup","text":"","code":"regroup(   x,   assignments,   ignore.case = NULL,   to.factor = FALSE,   to.numeric = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Values to Groups of Values — regroup","text":"x vector values assignments list assignments form \\<key\\> = \\<values\\> \\<values\\> vector elements looked x replaced \\<key\\> output vector ignore.case TRUE case ignored comparing values .factor TRUE new values converted factor. default FALSE. .numeric TRUE (default!) independent .factor (!) returned values converted numeric values assigned (even though string) values \"look like\" numeric values, \"1\", \"2\", \"3.4\", \"5.67\".","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Values to Groups of Values — regroup","text":"vector many elements elements x. vector contains \\<key\\> positions elements x appeared vector \\<values\\> \\<key\\> = \\<values\\> assignment assignments","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Values to Groups of Values — regroup","text":"","code":"regroup(c(\"A\", \"B\", \"C\", \"D\"), assignments = list(   \"AB\" = c(\"A\", \"B\"),   \"CD\" = c(\"C\", \"D\") )) #> [1] \"AB\" \"AB\" \"CD\" \"CD\"   x <- c(\"A\", \"B\", \"C\", \"D\", \"E\", \"A\") assignments <- list(  \"1\" = c(\"A\", \"B\"),  \"2\" = c(\"C\", \"D\") )  regroup(x, assignments) #> [1]  1  1  2  2 NA  1  # to.factor is ignored... regroup(x, assignments, to.factor = TRUE) #> [1]  1  1  2  2 NA  1  # ... unless to.numeric is FALSE! regroup(x, assignments, to.factor = TRUE, to.numeric = FALSE) #> [1] 1    1    2    2    <NA> 1    #> Levels: 1 2"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroupedValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Regroup Values According to Configuration — regroupedValues","title":"Regroup Values According to Configuration — regroupedValues","text":"Regroup Values According Configuration","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroupedValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regroup Values According to Configuration — regroupedValues","text":"","code":"regroupedValues(   values,   config = NULL,   labels = \"labels1\",   to.factor = FALSE,   to.numeric = TRUE,   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regroupedValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regroup Values According to Configuration — regroupedValues","text":"values vector values config configuration (list) describing regroup. list contains element breaks function groupByBreaks called group values together belong intervals defined breaks. Otherwise list must contain element values element name given labels (default: \"labels1\"). given function regroup performs \"value label\"-regrouping. labels default: \"labels1\" .factor TRUE new values converted factor. default FALSE. .numeric (default: TRUE, overrides .factor!), passed regroup dbg TRUE (default) debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regrouping_is_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Which actual regroupings would be used? — regrouping_is_used","title":"Which actual regroupings would be used? — regrouping_is_used","text":"actual regroupings used columns available data frame","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regrouping_is_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which actual regroupings would be used? — regrouping_is_used","text":"","code":"regrouping_is_used(columns, actuals)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regrouping_is_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which actual regroupings would be used? — regrouping_is_used","text":"columns vector column names check subject regrouping actuals list elements , returned kwb.prep:::read_actual_regrouping","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/regrouping_is_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which actual regroupings would be used? — regrouping_is_used","text":"vector logical long actuals. Attribute column: columns data frame regrouping?","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/removeRowsThatAreNaInColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Rows That are NA in Given Column — removeRowsThatAreNaInColumn","title":"Remove Rows That are NA in Given Column — removeRowsThatAreNaInColumn","text":"Remove Rows NA Given Column","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/removeRowsThatAreNaInColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Rows That are NA in Given Column — removeRowsThatAreNaInColumn","text":"","code":"removeRowsThatAreNaInColumn(data, column, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/removeRowsThatAreNaInColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Rows That are NA in Given Column — removeRowsThatAreNaInColumn","text":"data data frame column column name dbg TRUE debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/removeRowsThatAreNaInColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Rows That are NA in Given Column — removeRowsThatAreNaInColumn","text":"data rows removed NA data[[column]]","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/removeRowsThatAreNaInColumn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Rows That are NA in Given Column — removeRowsThatAreNaInColumn","text":"","code":"df <- data.frame(a = c(1, NA, 3), b = c(11, 22, NA)) df #>    a  b #> 1  1 11 #> 2 NA 22 #> 3  3 NA  removeRowsThatAreNaInColumn(df, \"a\") #> Removing 1 rows that are NA in column 'a' ... ok. (0.00s)  removeRowsThatAreNaInColumn(df, \"b\") #> Removing 1 rows that are NA in column 'b' ... ok. (0.00s)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceByCondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Values in Column in Rows Matching Condition — replaceByCondition","title":"Replace Values in Column in Rows Matching Condition — replaceByCondition","text":"Replace Values Column Rows Matching Condition","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceByCondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Values in Column in Rows Matching Condition — replaceByCondition","text":"","code":"replaceByCondition(df, file = NULL, group = NULL, config = NULL, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceByCondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Values in Column in Rows Matching Condition — replaceByCondition","text":"df data frame substitutions file path CSV file columns group, target_column, condition, replacement group group name. given, rows file group name column group considered. config optional. Data frame containing configuration read file. dbg TRUE debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceByCondition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Values in Column in Rows Matching Condition — replaceByCondition","text":"","code":"# Create a very simple data frame df <- data.frame(a = 1:3)  # Create a very simple configuration config <- read.table(sep = \",\", header = TRUE, text = c(   \"group,target,condition,replacement\",   \"g1,a,a==2,22\",   \"g2,a,a==3,33\" ))  # Write the configuration to a temporary file file <- tempfile() write.csv(config, file)  # Apply all replacements configured in the file ... replaceByCondition(df, file) #> Data correction in 'a': 1 values with \"a==2\" set to '22' #> Data correction in 'a': 1 values with \"a==3\" set to '33' #>    a #> 1  1 #> 2 22 #> 3 33  # ... or in the configuration replaceByCondition(df, config = config) #> Data correction in 'a': 1 values with \"a==2\" set to '22' #> Data correction in 'a': 1 values with \"a==3\" set to '33' #>    a #> 1  1 #> 2 22 #> 3 33  # Apply selected replacements replaceByCondition(df, file, group = \"g1\") #> Data correction in 'a': 1 values with \"a==2\" set to '22' #>    a #> 1  1 #> 2 22 #> 3  3 replaceByCondition(df, file, group = \"g2\") #> Data correction in 'a': 1 values with \"a==3\" set to '33' #>    a #> 1  1 #> 2  2 #> 3 33"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceUnlessNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Elements of Substitute at Indices Where Substitutes Are Not NA — replaceUnlessNA","title":"Use Elements of Substitute at Indices Where Substitutes Are Not NA — replaceUnlessNA","text":"Use Elements Substitute Indices Substitutes NA","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceUnlessNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Elements of Substitute at Indices Where Substitutes Are Not NA — replaceUnlessNA","text":"","code":"replaceUnlessNA(x, substitute)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/replaceUnlessNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Elements of Substitute at Indices Where Substitutes Are Not NA — replaceUnlessNA","text":"x vector substitute substitute vector containing substitutions","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/reportNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Count NA in a Column and Give a Message about It — reportNA","title":"Count NA in a Column and Give a Message about It — reportNA","text":"Count NA Column Give Message ","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/reportNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count NA in a Column and Give a Message about It — reportNA","text":"","code":"reportNA(data, column, subject = \"in data\")"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/reportNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count NA in a Column and Give a Message about It — reportNA","text":"data data frame column name column data subject value placeholder subject output: \"NAs subject: count_NA\"","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Column — set_column","title":"Set Column — set_column","text":"Set Column","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Column — set_column","text":"","code":"set_column(   df,   column,   value = NULL,   indices = NULL,   from = NULL,   must_exist = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Column — set_column","text":"df data frame column column value value indices row indices name source column, optional must_exist column assumed exist?","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_user_config_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Path to the Config Folder — set_user_config_dir","title":"Set the Path to the Config Folder — set_user_config_dir","text":"Many functions package require configuration files. idea behind separate (configurational) data code. code can configuration files need exchanged. function tell kwb.prep look configuration files.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_user_config_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Path to the Config Folder — set_user_config_dir","text":"","code":"set_user_config_dir(path)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_user_config_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Path to the Config Folder — set_user_config_dir","text":"path path config folder containing configuration files","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_user_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get List of User-Defined Text Constants — set_user_strings","title":"Get List of User-Defined Text Constants — set_user_strings","text":"Get List User-Defined Text Constants","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_user_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get List of User-Defined Text Constants — set_user_strings","text":"","code":"set_user_strings(x)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/set_user_strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get List of User-Defined Text Constants — set_user_strings","text":"x list key = (character) value assignments","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stopIfNotIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop with Info If Element Is Not in Expected Set — stopIfNotIn","title":"Stop with Info If Element Is Not in Expected Set — stopIfNotIn","text":"Stop info message element expected set elements","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stopIfNotIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop with Info If Element Is Not in Expected Set — stopIfNotIn","text":"","code":"stopIfNotIn(   element,   elements,   singular = \"option\",   plural = paste0(singular, \"s\"),   do_stop = TRUE )"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stopIfNotIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop with Info If Element Is Not in Expected Set — stopIfNotIn","text":"element element looked elements elements vector possible elements singular name object appear error message. Default: \"option\" plural name object (plural) appear error message. Default: paste0(singular, \"s\") do_stop FALSE (default TRUE) program execution stop. Instead message shown.","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stopOnDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop If There Are Duplicates over given Columns — stopOnDuplicates","title":"Stop If There Are Duplicates over given Columns — stopOnDuplicates","text":"Stop Duplicates given Columns","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stopOnDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop If There Are Duplicates over given Columns — stopOnDuplicates","text":"","code":"stopOnDuplicates(data, columns = names(data), name = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stopOnDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop If There Are Duplicates over given Columns — stopOnDuplicates","text":"data data frame columns names columns look duplicates. default, columns data used. name name data","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stop_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop with Error Message Looked Up by Keyword — stop_text","title":"Stop with Error Message Looked Up by Keyword — stop_text","text":"Stop Error Message Looked Keyword","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stop_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop with Error Message Looked Up by Keyword — stop_text","text":"","code":"stop_text(...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/stop_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop with Error Message Looked Up by Keyword — stop_text","text":"... arguments passed get_text","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/unzip_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"Unzip Archive — unzip_archive","title":"Unzip Archive — unzip_archive","text":"Unzip Archive","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/unzip_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unzip Archive — unzip_archive","text":"","code":"unzip_archive(zip_file, target_dir = tempdir(), flatten = TRUE, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/unzip_archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unzip Archive — unzip_archive","text":"zip_file path archive file target_dir path target directory flatten TRUE (default) files archive unzipped directly target directory, independent possible folder structures within archive dbg whether show debug messages","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/writeStandardCsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write CSV File in a Standardised Manner — writeStandardCsv","title":"Write CSV File in a Standardised Manner — writeStandardCsv","text":"Write CSV File Standardised Manner","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/writeStandardCsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write CSV File in a Standardised Manner — writeStandardCsv","text":"","code":"writeStandardCsv(x, file, ...)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/writeStandardCsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write CSV File in a Standardised Manner — writeStandardCsv","text":"x data frame file path CSV file written ... additional arguments passed write.table","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_filter_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Information on Filtering to CSV files — write_filter_info","title":"Write Information on Filtering to CSV files — write_filter_info","text":"Write Information Filtering CSV files","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_filter_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Information on Filtering to CSV files — write_filter_info","text":"","code":"write_filter_info(x, target_dir, prefix = deparse(substitute(x)), dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_filter_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Information on Filtering to CSV files — write_filter_info","text":"x data frame returned apply_filters, attribute filter_info set. target_dir path directory write csv files prefix string prefix files dbg whether show debug messages","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_filter_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Information on Filtering to CSV files — write_filter_info","text":"x, unchanged, invisibly","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_markdown_chapter.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Markdown Chapter — write_markdown_chapter","title":"Write a Markdown Chapter — write_markdown_chapter","text":"Write Markdown Chapter","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_markdown_chapter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Markdown Chapter — write_markdown_chapter","text":"","code":"write_markdown_chapter(x, caption_key = \"key?\", level = 3L, caption = NULL)"},{"path":"https://kwb-r.github.io/kwb.prep/dev/reference/write_markdown_chapter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Markdown Chapter — write_markdown_chapter","text":"x x caption_key caption_key level level caption caption","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/news/index.html","id":"kwbprep-030-2022-06-09","dir":"Changelog","previous_headings":"","what":"kwb.prep 0.3.0 2022-06-09","title":"kwb.prep 0.3.0 2022-06-09","text":"Add argument “.numeric” doRegroupings(), applyRegrouping(), regroupedValues(), regroup(), typeConverted() Let replaceByCondition() ignore lines starting “#” config file Document export fieldSummary()","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/news/index.html","id":"kwbprep-020-2022-01-24","dir":"Changelog","previous_headings":"","what":"kwb.prep 0.2.0 2022-01-24","title":"kwb.prep 0.2.0 2022-01-24","text":"Add private functions: get_user_config_dir() set_user_config_dir() round_numeric() writeStandardCsv(): Use kwb.utils::argsCsv() TODO: use consistent sep/dec combination format_overview_table(): round numeric (non-integer) columns two digits write_data_frames(): add argument “lng” set sep/dec","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/news/index.html","id":"kwbprep-010-2022-01-21","dir":"Changelog","previous_headings":"","what":"kwb.prep 0.1.0 2022-01-21","title":"kwb.prep 0.1.0 2022-01-21","text":"First release","code":""},{"path":"https://kwb-r.github.io/kwb.prep/dev/news/index.html","id":"kwbprep-0009000","dir":"Changelog","previous_headings":"","what":"kwb.prep 0.0.0.9000","title":"kwb.prep 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
