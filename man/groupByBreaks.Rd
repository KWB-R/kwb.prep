% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doRegroupings.R
\name{groupByBreaks}
\alias{groupByBreaks}
\title{Group Values Belonging to Intervals}
\usage{
groupByBreaks(
  x,
  breaks,
  values = breaksToIntervalLabels(breaks),
  right = TRUE,
  add.Inf.limits = TRUE,
  to.factor = FALSE,
  columns = NULL,
  keyFields = NULL
)
}
\arguments{
\item{x}{vector of values or a data frame. If \code{x} is a data frame, the
function is applied to each column given in \code{columns} (all numeric
columns by default)}

\item{breaks}{vector of breaks}

\item{values}{values to be assigned}

\item{right}{if TRUE the intervals are right-closed, else left-closed.}

\item{add.Inf.limits}{if TRUE (default), -Inf and Inf are added to the left
and right, respectively, of \code{breaks}}

\item{to.factor}{if \code{TRUE} the new values are converted to
\code{factor}. The default is \code{FALSE}.}

\item{columns}{\code{NULL} or vector of column names (if \code{x} is a data
frame)}

\item{keyFields}{\code{NULL} or vector of column names (if \code{x} is a data
frame). If not \code{NULL}, a data frame with these columns coming first
and the interval labels in the last column is returned.}
}
\description{
Group values together that belong to the same intervals being defined by
breaks
}
\examples{
groupByBreaks(1:10, breaks = 5, values = c("<= 5", "> 5"))
groupByBreaks(1:10, breaks = 5, right = FALSE, values = c("< 5", ">= 5"))

# Prepare a simple data frame
x <- kwb.utils::noFactorDataFrame(
  id = c("A", "B", "C"), 
  value = c(10, 20, 30)
)

# Keep the ID column of the data frame
groupByBreaks(x, breaks = 20, keyFields = "id")

}
